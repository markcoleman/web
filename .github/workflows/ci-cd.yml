name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_VERSION: '9.0.x'
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    name: Build and Test
    
    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          SA_PASSWORD: MyStrongPassword123!
          ACCEPT_EULA: Y
          MSSQL_PID: Developer
        ports:
          - 1433:1433
        options: >-
          --health-cmd="/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P MyStrongPassword123! -C -Q 'SELECT 1'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
          --health-start-period=30s

    steps:
    - uses: actions/checkout@v5
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v5
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore src/UmbracoWeb/UmbracoWeb/UmbracoWeb.csproj
      
    - name: Build
      run: dotnet build src/UmbracoWeb/UmbracoWeb/UmbracoWeb.csproj --no-restore --configuration Release
      
    - name: Test
      run: dotnet test src/UmbracoWeb/UmbracoWeb/UmbracoWeb.csproj --no-build --configuration Release --verbosity normal
      
    - name: Publish
      run: dotnet publish src/UmbracoWeb/UmbracoWeb/UmbracoWeb.csproj --no-build --configuration Release --output ./publish
      
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: published-app
        path: ./publish

  docker-build:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'
    name: Build and Push Docker Image
    
    permissions:
      contents: read
      packages: write
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
      
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: src/UmbracoWeb/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  security-scan:
    runs-on: ubuntu-latest
    name: Security Scanning
    if: github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v4
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'